{"name":"Pychildren","tagline":"Code for the teaching children Python programming.  http://pychildren.blogspot.com","body":"PyChildren - Teaching Children to Program in Python\r\n===================================================\r\n\r\nTarget: Age 12 to 15 \r\n\r\nAbout: This is written with one student in mind, my son.  He is currently 14\r\nyears old.  I am not a teacher or a programmer.  I am just a dad that\r\nwanted to hang out with his kids and help them to create fun and cool\r\ntoys to play with.  I learned Python specifically to teach my children\r\nand have no training.  This is our path.\r\n\r\nThe Oda Family Teaching Philosophy / Strategy\r\n---------------------------------------------\r\nHeavy on repetition.  Light on theory.\r\n\r\nAvoid Scratch and Alice if child is older than 12.  Teach them to type.\r\nUse a text editor or IDE, the same tool professionals use.  Avoid sandbox\r\nenvironments designed specifically to teach children.    My son uses\r\nKomodo Edit.  I use Emacs and PyCharm.  This is my personal \r\nphilosophy based on my own experience teaching my own child to \r\nprogram.  Choose your own path.\r\n\r\nChange in Direction\r\n-------------------\r\nWhen my son was 12, he broke the screen of his cheap mobile phone \r\nduring cross country.  I let him suffer with his broken screen for a year\r\nand then finally bought him a used Android phone on eBay for $40,\r\nincluding shipping.  That first phone was a LG Optimus S with Android\r\n2.2.  It was the first Android phone in our family.  My wife and I\r\nwere previously iPhone people.\r\n\r\nThat old, slow Android phone started us down the path of mobile \r\napp development using Pygame Subset for Android (pgs4a).  It\r\nwas the breakthrough moment.  It allowed him to share his games\r\nwith his friends and our family.  It provided the motivation to\r\nkeep going.  Our family curriculum is now based around pgs4a.\r\n\r\n\r\nThe Oda Path\r\n------------\r\n\r\n### Group One \r\nSix modules that must be done in sequence.\r\n![alt text](screenshot_lesson_6.png \"Screenshot of Lesson 6 on Phone\")\r\n\r\n\r\n1. The Blank Screen\r\n\r\n2. The Stationary Square\r\n\r\n3. The Moving Square\r\n\r\n4. Touchscreen movement\r\n\r\n5. Going Mobile - Getting your app on your Android phone\r\n\r\n* Adding Android-specific code\r\n* Configuring pgs4a\r\n* Loading the app onto your phone with a USB cable\r\n\r\n6. Putting it all together - Adding graphics and a virtual controller\r\n\r\n###Group 2 \r\nTwo suggested modules are 2D scroller movement of the ground/background\r\nand character animation of the running man.\r\n![alt text](https://github.com/codetricity/pychildren/blob/master/img/2d_scroller_kai.png \r\n\"Scroller at Age 13\")\r\n\r\n1. 2D ground scroller basic\r\n\r\n2. Pygame character animation\r\n\r\n### Group 3\r\nMany different paths.  Pick your own\r\n\r\n![alt text](img/swarm_2d_map.png \"Swarm written at age 13\")\r\n\r\n1. 2D Tile map basic. No loader. Map doesn't scroll (see Swarm game)\r\n\r\n2. Tiled 2D tile map creation in JSON format\r\n\r\n3. Building the json loader to get the map onto the phone\r\n\r\nExcept for Swarm, there are video tutorials for all the lesson blocks. Each of the eleven lesson blocks above is more than one day of lessons. Assuming one class per week, the JSON loader lesson could take months to complete.\r\n\r\n\r\nPyChildren - Oda Path Age 11 - 14\r\n---------------------------------\r\n\r\n![alt text](img/path_age_11_to_14.png \"Oda Path - Ages 11 - 14\")\r\n\r\nBlog for teaching children Python programming.  http://pychildren.blogspot.com\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}